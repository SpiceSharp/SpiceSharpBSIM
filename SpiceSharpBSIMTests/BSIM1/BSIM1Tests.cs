using System.Numerics;
using NUnit.Framework;
using SpiceSharp;
using SpiceSharp.Algebra;
using SpiceSharp.Components;
using SpiceSharp.Simulations;

namespace SpiceSharpTest.Models
{
    [TestFixture]
    public class BSIM1Tests : Framework
    {
        /// <summary>
        /// Generate a BSIM1 transistor
        /// </summary>
        private BSIM1 CreateMosfet(string name, string drain, string gate, string source, string bulk, double w, double l, string model)
        {
            // Create the device
            var e = new BSIM1(name, drain, gate, source, bulk);
            e.SetParameter("w", w);
            e.SetParameter("l", l);
            e.Model = model;
            return e;
        }

        private BSIM1Model CreateModel(string name, string parameters)
        {
            var m = new BSIM1Model(name);
            ApplyParameters(m, parameters);
            return m;
        }

        [Test]
        public void When_BSIM1DC_Expect_Reference()
        {
            var ckt = new Circuit(
                new VoltageSource("V1", "g", "0", 0.0),
                new VoltageSource("V2", "d", "0", 0.0),
                CreateMosfet("M1", "d", "g", "0", "0", 100e-6, 100e-6, "mod"),
                CreateModel("mod", "temp=25 muz=600 vdd=5 vfb=-0.3 phi=0.6 k1=0.5 u0=670 x2e=-0.07 mus=1082 n0=0.5 tox=1e-7 mj=0.5 mjsw=0.33 pb=0.8 pbsw=1.0 xpart=1.0")
            );
            ckt["M1"].SetParameter("m", 2.0);

            // Create simulation
            var dc = new DC("dc", new[]
            {
                new ParameterSweep("V1", new LinearSweep(0, 3.3, 0.3)),
                new ParameterSweep("V2", new LinearSweep(0, 3.3, 0.3))
            });

            // Create exports
            var exports = new[] { new RealPropertyExport(dc, "V2", "i") };

            // Create references
            // 20220723 - Sven Boulanger - using ngSpice
            double[][] references =
            {
                new[]
                {
                    0.000000000000000e+00, -6.231974454142565e-13, -2.446394890797599e-12, -3.669592336195702e-12,
                    -4.892789781593805e-12, -6.115987226991909e-12, -7.339184672390012e-12, -8.562382117788114e-12,
                    -9.785579563186219e-12, -1.100877700858432e-11, -1.223197445398242e-11, -1.345517189938053e-11,
                    0.000000000000000e+00, -8.149705756080626e-13, -2.462928877785094e-12, -3.686126323184589e-12,
                    -4.909323768582692e-12, -6.132521213980796e-12, -7.355718659378900e-12, -8.578916104777003e-12,
                    -9.802113550175105e-12, -1.102531099557321e-11, -1.224850844097131e-11, -1.347170588636941e-11,
                    0.000000000000000e+00, -1.959806921921822e-04, -1.959824892616684e-04, -1.959824905013469e-04,
                    -1.959824917245456e-04, -1.959824929477424e-04, -1.959824941709411e-04, -1.959824953941380e-04,
                    -1.959824966173366e-04, -1.959824978405335e-04, -1.959824990637321e-04, -1.959825002869290e-04,
                    0.000000000000000e+00, -1.307995435414572e-01, -1.312854999580071e-01, -1.317394152921705e-01,
                    -1.321612895440087e-01, -1.325511227135217e-01, -1.329089148007096e-01, -1.332346658055722e-01,
                    -1.335283757281097e-01, -1.337900445683220e-01, -1.340196723262091e-01, -1.342172590017709e-01,
                    0.000000000000000e+00, -1.379932619049744e-01, -1.405792890217205e-01, -1.416778978019986e-01,
                    -1.426989577272845e-01, -1.436424687975784e-01, -1.445084310128801e-01, -1.452968443731897e-01,
                    -1.460077088785072e-01, -1.466410245288326e-01, -1.471967913241660e-01, -1.476750092645071e-01,
                    0.000000000000000e+00, -1.405861366080746e-01, -1.494514852150446e-01, -1.516165217727922e-01,
                    -1.532367763027082e-01, -1.547339735266475e-01, -1.561081134446101e-01, -1.573591960565962e-01,
                    -1.584872213626055e-01, -1.594921893626381e-01, -1.603741000566941e-01, -1.611329534447734e-01,
                    0.000000000000000e+00, -1.417827333390760e-01, -1.546002137942621e-01, -1.614761097096562e-01,
                    -1.637746250733795e-01, -1.658255100375062e-01, -1.677078291142710e-01, -1.694215823036739e-01,
                    -1.709667696057148e-01, -1.723433910203938e-01, -1.735514465477108e-01, -1.745909361876659e-01,
                    0.000000000000000e+00, -1.424716501225611e-01, -1.575644919340361e-01, -1.685984060658248e-01,
                    -1.743124848228976e-01, -1.769170581040707e-01, -1.793075568690835e-01, -1.814839811179361e-01,
                    -1.834463308506283e-01, -1.851946060671603e-01, -1.867288067675321e-01, -1.880489329517436e-01,
                    0.000000000000000e+00, -1.429194331596820e-01, -1.594912173384954e-01, -1.732277656199739e-01,
                    -1.830324042717888e-01, -1.880086116592714e-01, -1.909072903640043e-01, -1.935463859012586e-01,
                    -1.959258982710345e-01, -1.980458274733319e-01, -1.999061735081508e-01, -2.015069363754913e-01,
                    0.000000000000000e+00, -1.432338279555334e-01, -1.608439984623435e-01, -1.764781043583664e-01,
                    -1.891548631528018e-01, -1.980060635350082e-01, -2.025070270341875e-01, -2.056087939864934e-01,
                    -2.084054691075453e-01, -2.108970523973430e-01, -2.130835438558868e-01, -2.149649434831765e-01,
                    0.000000000000000e+00, -1.434667097663071e-01, -1.618460446853072e-01, -1.788857293604759e-01,
                    -1.936899551117416e-01, -2.054613264843800e-01, -2.135008612490137e-01, -2.176712040895127e-01,
                    -2.208850420316229e-01, -2.237482794710910e-01, -2.262609164079168e-01, -2.284229528421003e-01,
                    0.000000000000000e+00, -1.436461414216485e-01, -1.626181050360817e-01, -1.807407653469041e-01,
                    -1.971841698579017e-01, -2.112054855819355e-01, -2.221489990409426e-01, -2.294461162659353e-01,
                    -2.333646163245718e-01, -2.365995079544764e-01, -2.394382904053589e-01, -2.418809636772190e-01,
                }
            };

            // Run simulation
            AnalyzeDC(dc, ckt, exports, references);
        }

        [Test]
        public void When_BSIM1Transient_Expect_Reference()
        {
            /*
             * NOTE: Spice 3f5 BSIM1 does not correctly register xpart=1. This was modified manually
             * in the debugger for simulating the reference.
             */

            // Build the circuit
            var ckt = new Circuit(
                new VoltageSource("Vsupply", "vdd", "0", 3.3),
                new VoltageSource("V1", "in", "0", new Pulse(0, 3.3, 1e-6, 1e-9, 0.5e-6, 2e-6, 6e-6)),
                new Resistor("R1", "vdd", "out", 10.0e3),
                new Capacitor("C1", "out", "0", 1e-7),
                CreateMosfet("M1", "out", "in", "0", "0", 100e-6, 100e-6, "Nch4"),
                CreateModel("Nch4", "temp=25 muz=600 vdd=5 vfb=-0.3 phi=0.6 k1=0.5 u0=670 x2e=-0.07 mus=1082 n0=0.5 tox=1e-7 mj=0.5 mjsw=0.33 pb=0.8 pbsw=1.0 xpart=0")
            );

            // Create the simulation and exports
            var tran = new Transient("Transient", 1e-9, 9e-6);
            tran.BeforeTemperature += (sender, data) =>
            {
                // Swap columns and rows in the matrix
                var state = tran.GetState<IBiasingSimulationState>();

                // Move "out" to the first spot
                var index = state.Map[state.GetSharedVariable("out")];
                var node = state.Solver.GetElement(new MatrixLocation(index, index));

                // Move "in" to the second spot
                index = state.Map[state.GetSharedVariable("in")];
                node = state.Solver.GetElement(new MatrixLocation(index, index));

                // Move "vdd" node to the third spot
                index = state.Map[state.GetSharedVariable("vdd")];
                node = state.Solver.GetElement(new MatrixLocation(index, index));
            };

            // Create exports
            var exports = new IExport<double>[] { new GenericExport<double>(tran, () => tran.GetState<IIntegrationMethod>().Time), new RealVoltageExport(tran, "out") };

            // Create references
            double[][] references =
            {
                new[]
                {
                    0.000000000000000e+00, 1.000000000000000e-11, 2.000000000000000e-11, 4.000000000000000e-11,
                    8.000000000000001e-11, 1.600000000000000e-10, 3.200000000000000e-10, 6.400000000000001e-10,
                    1.280000000000000e-09, 2.560000000000000e-09, 5.120000000000001e-09, 1.024000000000000e-08,
                    2.048000000000000e-08, 4.096000000000000e-08, 8.192000000000001e-08, 1.638400000000000e-07,
                    3.276800000000000e-07, 5.076800000000000e-07, 6.876800000000000e-07, 8.676799999999999e-07,
                    1.000000000000000e-06, 1.000100000000000e-06, 1.000300000000000e-06, 1.000528235231905e-06,
                    1.000812072750154e-06, 1.001000000000000e-06, 1.001031725709194e-06, 1.001095177127582e-06,
                    1.001222079964357e-06, 1.001475885637909e-06, 1.001983496985011e-06, 1.002998719679216e-06,
                    1.005029165067626e-06, 1.009090055844446e-06, 1.017211837398087e-06, 1.033455400505367e-06,
                    1.065942526719929e-06, 1.130916779149051e-06, 1.260865284007296e-06, 1.440865284007296e-06,
                    1.620865284007296e-06, 1.800865284007296e-06, 1.980865284007296e-06, 2.160865284007296e-06,
                    2.340865284007296e-06, 2.520865284007296e-06, 2.700865284007296e-06, 2.880865284007296e-06,
                    3.001000000000000e-06, 3.019000000000000e-06, 3.055000000000000e-06, 3.127000000000000e-06,
                    3.271000000000000e-06, 3.451000000000000e-06, 3.501000000000000e-06, 3.505046551280623e-06,
                    3.513139653841870e-06, 3.529325858964364e-06, 3.561698269209352e-06, 3.626443089699328e-06,
                    3.755932730679279e-06, 3.935932730679280e-06, 4.115932730679280e-06, 4.295932730679280e-06,
                    4.475932730679279e-06, 4.655932730679279e-06, 4.835932730679279e-06, 5.015932730679279e-06,
                    5.195932730679279e-06, 5.375932730679279e-06, 5.555932730679279e-06, 5.735932730679279e-06,
                    5.915932730679279e-06, 6.095932730679279e-06, 6.275932730679279e-06, 6.455932730679279e-06,
                    6.635932730679279e-06, 6.815932730679279e-06, 6.995932730679279e-06, 7.000000000000000e-06,
                    7.000100000000000e-06, 7.000300000000000e-06, 7.000528235231903e-06, 7.000812072750151e-06,
                    7.001000000000000e-06, 7.001031725709193e-06, 7.001095177127580e-06, 7.001222079964356e-06,
                    7.001475885637905e-06, 7.001983496985005e-06, 7.002998719679204e-06, 7.005029165067602e-06,
                    7.009090055844399e-06, 7.017211837397992e-06, 7.033455400505178e-06, 7.065942526719549e-06,
                    7.130916779148293e-06, 7.260865284005781e-06, 7.440865284005781e-06, 7.620865284005781e-06,
                    7.800865284005781e-06, 7.980865284005781e-06, 8.160865284005781e-06, 8.340865284005781e-06,
                    8.520865284005781e-06, 8.700865284005781e-06, 8.880865284005781e-06, 9.000000000000000e-06
                },
                new[]
                {
                    3.299999932724107e+00, 3.299999932724107e+00, 3.299999932724107e+00, 3.299999932724107e+00,
                    3.299999932724107e+00, 3.299999932724106e+00, 3.299999932724103e+00, 3.299999932724100e+00,
                    3.299999932724101e+00, 3.299999932724103e+00, 3.299999932724102e+00, 3.299999932724102e+00,
                    3.299999932724101e+00, 3.299999932724103e+00, 3.299999932724104e+00, 3.299999932724104e+00,
                    3.299999932724102e+00, 3.299999932724102e+00, 3.299999932724101e+00, 3.299999932724101e+00,
                    3.299999932724101e+00, 3.299999932724100e+00, 6.087206695344316e+00, 1.302227200419934e+01,
                    2.164678915604327e+01, 2.735698277884406e+01, 2.735693445243249e+01, 2.735685417209633e+01,
                    2.735669361143929e+01, 2.735637249018633e+01, 2.735573024792491e+01, 2.735444576438007e+01,
                    2.735187680120249e+01, 2.734673889049571e+01, 2.733646313167539e+01, 2.731591186440514e+01,
                    2.727481033132576e+01, 2.719261127084904e+01, 2.702822917132242e+01, 2.680056827702503e+01,
                    2.657294835800151e+01, 2.634536940687716e+01, 2.611783141627841e+01, 2.589033437883300e+01,
                    2.566287828717006e+01, 2.543546313391999e+01, 2.520808891171457e+01, 2.498075561318683e+01,
                    2.482905270725553e+01, 2.371293952858693e+01, 2.148176470134729e+01, 1.702572399968151e+01,
                    8.138876120776226e+00, 4.158204523782711e-01, 4.159646577482515e-01, 4.159763280979001e-01,
                    4.159996687027483e-01, 4.160463493457555e-01, 4.161397083650591e-01, 4.163264173371904e-01,
                    4.166997990184834e-01, 4.172187463478710e-01, 4.177376002751438e-01, 4.182563608171124e-01,
                    4.187750279905849e-01, 4.192936018123657e-01, 4.198120822992569e-01, 4.203304694680574e-01,
                    4.208487633355625e-01, 4.213669639185653e-01, 4.218850712338553e-01, 4.224030852982193e-01,
                    4.229210061284409e-01, 4.234388337413006e-01, 4.239565681535760e-01, 4.244742093820419e-01,
                    4.249917574434700e-01, 4.255092123546286e-01, 4.260265741322831e-01, 4.260382633324204e-01,
                    4.260385507285643e-01, 3.213246696257325e+00, 1.014831239928257e+01, 1.877283036681891e+01,
                    2.448302737786551e+01, 2.448298027717206e+01, 2.448287227665717e+01, 2.448271208071657e+01,
                    2.448239168889635e+01, 2.448175090549983e+01, 2.448046933968263e+01, 2.447790621195142e+01,
                    2.447277997210188e+01, 2.446252755485383e+01, 2.444202297015940e+01, 2.440101479995688e+01,
                    2.431900245613486e+01, 2.415499375352464e+01, 2.392784999507078e+01, 2.370074711881474e+01,
                    2.347368511739851e+01, 2.324666398346531e+01, 2.301968370965962e+01, 2.279274428862730e+01,
                    2.256584571301553e+01, 2.233898797547275e+01, 2.211217106864880e+01, 2.196207258840766e+01
                }
            };

            // Run
            AnalyzeTransient(tran, ckt, exports, references);
        }

        [Test]
        public void When_BSIM1SmallSignal_Expect_Reference()
        {
            // Build the circuit
            var ckt = new Circuit(
                new VoltageSource("Vsupply", "vdd", "0", 3.3),
                new VoltageSource("V1", "in", "0", 0.0),
                new Resistor("R1", "vdd", "out", 10.0e3),
                new Resistor("R2", "out", "g", 1.0e6),
                new Capacitor("C1", "in", "g", 1e-9),
                CreateMosfet("M1", "out", "g", "0", "0", 100e-6, 100e-6, "Nch4"),
                CreateModel("Nch4", "VFB=-7.744e-1 K1=1.112 K2=2.051e-1 ETA=1.185e-2 MUZ=8.052e2 U0=6.757e-2 U1=6.443e-1 X2MZ=3.213e1 X2E=2.670e-3 X3E=1.046e-3 X2U0=1.055e-2 X2U1=-3.186e-2 MUS=1.293e3 X2MS=3.737e1 X3MS=1.374e2 X3U1=1.489e-1 PHI=7.5 TOX=4e-2 VDD=5 DL=0 DW=0 CGDO=3.41e-10 CGSO=3.41e-10 CGBO=5.51e-10")
            );
            ckt["V1"].SetParameter("acmag", 1.0);

            // AC simulation
            var ac = new AC("ac 1", new DecadeSweep(0.1, 1.0e9, 20));

            // Create exports
            var exports = new IExport<Complex>[] { new ComplexVoltageExport(ac, "out") };

            // Reference
            // 20220723 - Sven Boulanger - using ngSpice
            var riref = new[]
            {
                3.996814903442884e-09,6.283182699407349e-06, 5.031691320968845e-09,7.049846201838217e-06, 6.334523232695665e-09,7.910056495085794e-06, 7.974690944942505e-09,8.875227888262333e-06, 1.003953898292191e-08,9.958167394975739e-06, 1.263902742181369e-08,1.117324464758569e-05, 1.591158752956448e-08,1.253658253530900e-05, 2.003149352721492e-08,1.406627109122552e-05, 2.521814299465670e-08,1.578260745983668e-05, 3.174774006560464e-08,1.770836512022106e-05, 3.996800347094202e-08,1.986909592424908e-05, 5.031668250737504e-08,2.229346893940589e-05, 6.334486668896117e-08,2.501365056659193e-05, 7.974632995331373e-08,2.806573094029342e-05, 1.003944713918893e-07,3.149020221758208e-05, 1.263888185972795e-07,3.533249502964798e-05, 1.591135683004654e-07,3.964358011128324e-05, 2.003112789479709e-07,4.448064294613900e-05, 2.521756350967411e-07,4.990784017447479e-05, 3.174682165047936e-07,5.599714751035313e-05, 3.996654789438770e-07,6.282931000988399e-05, 5.031437560059061e-07,7.049490672133822e-05, 6.334121054115090e-07,7.909554302720350e-05, 7.974053545538009e-07,8.874518534588295e-05, 1.003852879427342e-06,9.957165427433737e-05, 1.263742642325567e-06,1.117182936843182e-04, 1.590905020275023e-06,1.253458346725884e-04, 2.002747230460802e-06,1.406344745149207e-04, 2.521177012426340e-06,1.577861917419223e-04, 3.173764042090429e-06,1.770273189305603e-04, 3.995199795782002e-06,1.986113944799689e-04, 5.029131816172929e-06,2.228223130673903e-04, 6.330467226252393e-06,2.499777910198868e-04, 7.968263675655692e-06,2.804331565784118e-04, 1.002935457715370e-05,3.145854646837097e-04, 1.262289047349022e-05,3.528779196660064e-04, 1.588602065896409e-05,3.958045645417733e-04, 1.999098965319186e-05,4.439151590029387e-04, 2.515398233907636e-05,4.978201148060012e-04, 3.164611935773134e-05,5.581952805762935e-04, 3.980707914271501e-05,6.257862592455865e-04, 5.006190078293778e-05,7.014117888608441e-04, 6.294159465427309e-05,7.859655064621230e-04, 7.910824078822477e-05,8.804151266896110e-04, 9.938526329049621e-05,9.857976801204769e-04, 1.247934922751121e-04,1.103208948002215e-03, 1.565933996415822e-04,1.233784579950352e-03, 1.963334272311196e-04,1.378669581268999e-03, 2.459034807413688e-04,1.538971927685870e-03, 3.075912591135603e-04,1.715695086014599e-03, 3.841369038158659e-04,1.909643371156646e-03, 4.787782498006626e-04,2.121293702261465e-03, 5.952745697213671e-04,2.350628030242444e-03, 7.378911811867766e-04,2.596923409760416e-03, 9.113211930336378e-04,2.858502617015096e-03, 1.120515464967116e-03,3.132458746546393e-03, 1.370390352190517e-03,3.414383331658785e-03, 1.665389348939440e-03,3.698148718738108e-03, 2.008894616735962e-03,3.975818084137646e-03, 2.402521662696718e-03,4.237772315565742e-03, 2.845383895278655e-03,4.473138875339221e-03, 3.333471895855105e-03,4.670569382802464e-03, 3.859330849272059e-03,4.819333174584274e-03, 4.412207724436534e-03,4.910585713529109e-03, 4.978756493390886e-03,4.938570511469717e-03, 5.544244971946831e-03,4.901472788486869e-03, 6.094050251889208e-03,4.801699904938461e-03, 6.615130890460309e-03,4.645510709852746e-03, 7.097172188920224e-03,4.442096313667238e-03, 7.533211842900396e-03,4.202351570234349e-03, 7.919712335237243e-03,3.937618726253296e-03, 8.256184595512996e-03,3.658632783129455e-03, 8.544540309293167e-03,3.374793703173222e-03, 8.788353203485583e-03,3.093784608838736e-03, 8.992166400786110e-03,2.821481292028700e-03, 9.160924293411291e-03,2.562065549186154e-03, 9.299555806656841e-03,2.318254498528586e-03, 9.412701217472088e-03,2.091575541275598e-03, 9.504557025162662e-03,1.882639461981816e-03, 9.578808285476928e-03,1.691384756539855e-03, 9.638620077343800e-03,1.517281576880709e-03, 9.686665235456565e-03,1.359493482243379e-03, 9.725171557785359e-03,1.217000572755741e-03, 9.755977076872884e-03,1.088689930757761e-03, 9.780586201161975e-03,9.734198040735971e-04, 9.800222577682701e-03,8.700634999989311e-04, 9.815876587147826e-03,7.775380755553169e-04, 9.828346694114694e-03,6.948219294675563e-04, 9.838274656528433e-03,6.209644878173254e-04, 9.846175025129756e-03,5.550903964422992e-04, 9.852459562376811e-03,4.964000042106276e-04, 9.857457272052802e-03,4.441674317461979e-04, 9.861430714004556e-03,3.977371490852893e-04, 9.864589221396694e-03,3.565197100733456e-04, 9.867099563691082e-03,3.199870898286511e-04, 9.869094520808534e-03,2.876679263752459e-04, 9.870679759963285e-03,2.591428642004950e-04, 9.871939340043131e-03,2.340401248775300e-04, 9.872940110447136e-03,2.120313795731694e-04, 9.873735222027970e-03,1.928279639628694e-04, 9.874366926598108e-03,1.761774531897854e-04, 9.874868807434999e-03,1.618605996897599e-04, 9.875267555364482e-03,1.496886275494478e-04, 9.875584382348873e-03,1.395008718502147e-04, 9.875836146180464e-03,1.311627489558247e-04, 9.876036245114538e-03,1.245640430687690e-04, 9.876195329415059e-03,1.196174950096569e-04, 9.876321867282994e-03,1.162576806534600e-04, 9.876422595038214e-03,1.144401685050203e-04, 9.876502875360436e-03,1.141409483277372e-04, 9.876566982560580e-03,1.153561254341798e-04, 9.876618330007299e-03,1.181018781334934e-04, 9.876659651777472e-03,1.224146788696483e-04, 9.876693148177714e-03,1.283517827628862e-04, 9.876720602869390e-03,1.359919905878093e-04, 9.876743477824041e-03,1.454366967022475e-04, 9.876762991159043e-03,1.568112361081411e-04, 9.876780181994433e-03,1.702665487141674e-04, 9.876795965782019e-03,1.859811830215830e-04, 9.876811183051580e-03,2.041636659179393e-04, 9.876826644169060e-03,2.250552700922886e-04, 9.876843172489477e-03,2.489332158407926e-04, 9.876861648202352e-03,2.761143497805064e-04, 9.876883055204191e-03,3.069593493059821e-04, 9.876908533493978e-03,3.418775085906587e-04, 9.876939439881889e-03,3.813321696441666e-04, 9.876977420244010e-03,4.258468704890367e-04, 9.877024497170848e-03,4.760122920285104e-04, 9.877083177677184e-03,5.324940957664486e-04, 9.877156586709039e-03,5.960417563501783e-04, 9.877248633557384e-03,6.674985060928664e-04, 9.877364220040482e-03,7.478125233668225e-04, 9.877509501540994e-03,8.380495132360749e-04, 9.877692214798428e-03,9.394068471308242e-04, 9.877922089912207e-03,1.053229448997795e-03, 9.878211368494661e-03,1.181027638456042e-03, 9.878575455565143e-03,1.324497167344380e-03, 9.879033739897593e-03,1.485541714993954e-03, 9.879610626502406e-03,1.666298139962623e-03, 9.880336836217137e-03,1.869164822230007e-03, 9.881251041600004e-03,2.096833470416530e-03, 9.882401926221205e-03,2.352324813941321e-03, 9.883850776981505e-03,2.639028650698699e-03, 9.885674747452639e-03,2.960748777376699e-03, 9.887970965935695e-03,3.321753392563460e-03, 9.890861706866105e-03,3.726831632911384e-03, 9.894500900738890e-03,4.181356980485244e-03, 9.899082328878641e-03,4.691358365617043e-03, 9.904849938896681e-03,5.263599884672300e-03, 9.912110829285128e-03,5.905670156514759e-03, 9.921251593221068e-03,6.626082455330261e-03, 9.932758889722972e-03,7.434386880660049e-03, 9.947245334123101e-03,8.341295957254941e-03, 9.965482081031119e-03,9.358825196085104e-03, 9.988439826098306e-03,1.050045029063107e-02, 1.001734039604997e-02,1.178128276465823e-02, 1.005372165212185e-02,1.321826602151424e-02, 1.009951912804224e-02,1.483039385910921e-02, 1.015716869431939e-02,1.663895359200390e-02, 1.022973562777005e-02,1.866779593723809e-02, 1.032107681987448e-02,2.094363373705035e-02, 1.043604454076864e-02,2.349637135671486e-02, 1.058074225969495e-02,2.635946613395558e-02, 1.076284559101237e-02,2.957032246076177e-02, 1.099200458084613e-02,3.317071779795359e-02, 1.128034737248052e-02,3.720725794594414e-02, 1.164310988514396e-02,4.173185592731437e-02, 1.209942158786370e-02,4.680222447138626e-02, 1.267328377548442e-02,5.248236577166956e-02, 1.339478388665591e-02,5.884303316196965e-02, 1.430159709178395e-02,6.596212662533962e-02, 1.544083406022156e-02,7.392496630748019e-02, 1.687130041657942e-02,8.282436380131412e-02, 1.866623702919440e-02,9.276037790065084e-02, 2.091660780226352e-02,1.038395975256656e-01, 2.373498807290991e-02,1.161737373553599e-01, 2.726007440872428e-02,1.298772597569958e-01, 3.166177436932307e-02,1.450636501365067e-01, 3.714672706015513e-02,1.618398761446683e-01, 4.396393185474129e-02,1.802984661882768e-01, 5.240990000595810e-02,2.005065743892718e-01, 6.283237007196585e-02,2.224914028157191e-01, 7.563113391848170e-02,2.462215011271565e-01, 9.125393009641097e-02,2.715838657319853e-01, 1.101847677281013e-01,2.983575491709141e-01, 1.329216500622508e-01,3.261857945489350e-01, 1.599408249899495e-01,3.545505758359140e-01, 1.916458930185182e-01,3.827556816360405e-01, 2.283028628561493e-01,4.099265664197572e-01, 2.699667856101935e-01,4.350360419036103e-01, 3.164113804000159e-01,4.569630493226721e-01, 3.670783439448040e-01,4.745860158682126e-01, 4.210649457198474e-01,4.869027148315673e-01, 4.771641483853327e-01,4.931574900658259e-01, 5.339599599247082e-01,4.929488026196591e-01, 5.899648867686212e-01,4.862902451294762e-01, 6.437725145855182e-01,4.736084335792639e-01, 6.941929622880965e-01,4.556783646931586e-01, 7.403449223948377e-01,4.335137531242931e-01, 7.816921872766380e-01,4.082395198820863e-01, 8.180282857883909e-01,3.809731666152003e-01,
            };
            var references = new Complex[1][];
            references[0] = new Complex[riref.Length / 2];
            for (var i = 0; i < riref.Length; i += 2)
                references[0][i / 2] = new Complex(riref[i], riref[i + 1]);

            // Run test
            AnalyzeAC(ac, ckt, exports, references);
        }
    }
}
