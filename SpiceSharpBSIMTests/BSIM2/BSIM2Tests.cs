using System.Collections.Generic;
using System.Diagnostics;
using System.Numerics;
using NUnit;
using NUnit.Framework;
using SpiceSharp;
using SpiceSharp.Behaviors;
using SpiceSharp.Components;
using SpiceSharp.IntegrationMethods;
using SpiceSharp.Simulations;

namespace SpiceSharpTest.Models
{
    [TestFixture]
    public class BSIM2Tests : Framework
    {
        /// <summary>
        /// Generate a BSIM1 transistor
        /// </summary>
        private BSIM2 Create(Identifier name, Identifier drain, Identifier gate, Identifier source, Identifier bulk, double w, double l, Identifier model, string parameters)
        {
            // Create the model
            var m = new BSIM2Model(model);
            ApplyParameters(m, parameters);

            // Create the device
            var e = new BSIM2(name, drain, gate, source, bulk);
            e.SetParameter("w", w);
            e.SetParameter("l", l);
            e.SetModel(m);
            return e;
        }

        [Test]
        public void When_BSIM2DC_Expect_Reference()
        {
            var ckt = new Circuit();
            ckt.Objects.Add(
                new VoltageSource("V1", "g", "0", 0.0),
                new VoltageSource("V2", "d", "0", 0.0),
                Create("M1", "d", "g", "0", "0", 10e-6, 1e-6, "mod", "vfb=-0.3 phi=0.8 k1=0.6 mu0=250 n0=1.3 tox=1e-7 mj=0.5 mjsw=0.33 pb=0.8 pbsw=1.0 xpart=1.0"));

            // Create simulation
            var dc = new DC("dc", new[]
            {
                new SweepConfiguration("V1", 0, 3.3, 0.3),
                new SweepConfiguration("V2", 0, 3.3, 0.3),
            });

            // Create exports
            Export<double>[] exports = {new RealPropertyExport(dc, "V2", "i")};

            // Create references
            double[][] references =
            {
                new[]
                {
                    -1.000000000000000e-50, -1.004372289037580e-02, -1.011033082222190e-02, -1.017684615804623e-02,
                    -1.024336149301214e-02, -1.030987682797807e-02, -1.037639216294399e-02, -1.044290749790992e-02,
                    -1.050942283287584e-02, -1.057593816784175e-02, -1.064245350280768e-02, -1.070896883777360e-02,
                    -1.000000000000000e-50, -8.761264572659984e-02, -8.819367500747333e-02, -8.877389656171586e-02,
                    -8.935411810847045e-02, -8.993433965522507e-02, -9.051456120197969e-02, -9.109478274873432e-02,
                    -9.167500429548893e-02, -9.225522584224355e-02, -9.283544738899814e-02, -9.341566893575277e-02,
                    -1.000000000000000e-50, -4.132952385071651e-01, -4.160340588741233e-01, -4.187711250678259e-01,
                    -4.215081912453394e-01, -4.242452574228530e-01, -4.269823236003666e-01, -4.297193897778800e-01,
                    -4.324564559553935e-01, -4.351935221329070e-01, -4.379305883104205e-01, -4.406676544879341e-01,
                    -1.000000000000000e-50, -3.693855480671697e+00, -3.728491233152088e+00, -3.753052508258300e+00,
                    -3.777582361859537e+00, -3.802112117763318e+00, -3.826641873363339e+00, -3.851171628962412e+00,
                    -3.875701384561484e+00, -3.900231140160553e+00, -3.924760895759626e+00, -3.949290651358698e+00,
                    -1.000000000000000e-50, -1.225705152720098e+01, -1.283812504301412e+01, -1.294805811829767e+01,
                    -1.303392674807220e+01, -1.311862294371964e+01, -1.320326215164724e+01, -1.328789858992737e+01,
                    -1.337253489360123e+01, -1.345717119073316e+01, -1.354180748754715e+01, -1.362644378434568e+01,
                    -1.000000000000000e-50, -2.135351687367902e+01, -2.607572954773885e+01, -2.657565568158140e+01,
                    -2.679209310611017e+01, -2.697155373962337e+01, -2.714626666321426e+01, -2.732037123206636e+01,
                    -2.749439786879719e+01, -2.766841452251566e+01, -2.784242989742756e+01, -2.801644510852665e+01,
                    -1.000000000000000e-50, -2.849261623302208e+01, -4.210242467285588e+01, -4.366106969397802e+01,
                    -4.422729254927948e+01, -4.457406484140301e+01, -4.487419169046089e+01, -4.516448727386884e+01,
                    -4.545271445713931e+01, -4.574050663308816e+01, -4.602820732943476e+01, -4.631588878845319e+01,
                    -1.000000000000000e-50, -3.434471761736317e+01, -5.840456067280783e+01, -6.325899838106288e+01,
                    -6.457838812172167e+01, -6.526063826518765e+01, -6.575684948678106e+01, -6.619977127232094e+01,
                    -6.662751239519153e+01, -6.705093574271756e+01, -6.747313154967910e+01, -6.789497841190590e+01,
                    -1.000000000000000e-50, -3.932606013516154e+01, -7.219553932770953e+01, -8.457593030515592e+01,
                    -8.713604187524258e+01, -8.842635278759738e+01, -8.925229433857037e+01, -8.991374874172371e+01,
                    -9.051759156512476e+01, -9.110133527978309e+01, -9.167807658957040e+01, -9.225237947204305e+01,
                    -1.000000000000000e-50, -4.367949544133837e+01, -8.391062588045278e+01, -1.062017823659480e+02,
                    -1.112859237155935e+02, -1.135184957103308e+02, -1.148723402430389e+02, -1.158612219168161e+02,
                    -1.167012615946594e+02, -1.174810469944070e+02, -1.182365130778147e+02, -1.189821754400764e+02,
                    -1.000000000000000e-50, -4.755341019079696e+01, -9.398512897954207e+01, -1.252828851089890e+02,
                    -1.365371186946263e+02, -1.400518932996493e+02, -1.421751455829641e+02, -1.436428774598817e+02,
                    -1.448095762202895e+02, -1.458396249551021e+02, -1.468079672312534e+02, -1.477485106835561e+02,
                    -1.000000000000000e-50, -5.104461398374103e+01, -1.027615924140216e+02, -1.419676270756469e+02,
                    -1.621616074087463e+02, -1.676215085527689e+02, -1.707698656276131e+02, -1.728987479429170e+02,
                    -1.745120187407013e+02, -1.758686711993065e+02, -1.770986148521515e+02, -1.782662379686020e+02
                }
            };

            // Run simulation
            AnalyzeDC(dc, ckt, exports, references);
        }
    }
}
